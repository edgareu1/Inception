version: '3'

# Define our application's containers

## "build" :
###  defines how to build the Docker image;
###  in our case we add the path to the Dockerfiles.

## "container_name" :
###  names our container instance.

## "depends_on" :
###  defines the dependencies;
###  Docker Compose will start the dependencies before the main service;
###  Ex: start the mariadb service before the wordpress.

## "ports" :
###  defines the port mapping between the host and our container;
###  port 443 is the standard port for HTTPS;
###  port 3306 is the default port for the classic MySQL protocol.

## "networks" :
###  defines the networks the container is connected to.

## "volumes" :
###  mounts volumes from the host (or named volumes) into the container;
###  Ex: "./requirements/nginx/tools:/etc/nginx/ssl/" mounts nginx SSL tools from the host to where we have out certificates.

## "restart" :
###  defines our restart policy;
###  in our case we will always attempt to restart the container if it exits for any reason.

services:
  nginx:
    build:
      context: .
      dockerfile: requirements/nginx/Dockerfile
    container_name: nginx
    ports:
      - "443:443"
    networks:
      - inception
    volumes:
      - ./requirements/nginx/conf/:/etc/nginx/http.d/
      - ./requirements/nginx/tools:/etc/nginx/ssl/
      - wp-volume:/var/www/
    restart: always

  mariadb:
    build:
      context: .
      dockerfile: requirements/mariadb/Dockerfile
      args:
        MYSQL_NAME: ${MYSQL_NAME}
        MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
        MYSQL_USER: ${MYSQL_USER}
        MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    container_name: mariadb
    ports:
      - "3306:3306"
    networks:
      - inception
    volumes:
      - db-volume:/var/lib/mysql
    restart: always

  wordpress:
    build:
      context: .
      dockerfile: requirements/wordpress/Dockerfile
      args:
        MYSQL_NAME: ${MYSQL_NAME}
        MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
        MYSQL_USER: ${MYSQL_USER}
        MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    container_name: wordpress
    depends_on:
      - mariadb
    networks:
      - inception
    volumes:
      - wp-volume:/var/www/
    restart: always


# Define named volumes that can be mounted into containers;
# Named volumes provide a way to persist data generated by, and used by, Docker containers.

# Ex: The "wp-volume" volume is mapped to a directory on the host machine (/home/efreire-/data/wordpress) using bind mount;
# this means that data in this directory on the host will be accessible within the container at the path specified in the container configurations.

volumes:
  wp-volume:
    driver_opts:
      o: bind
      type: none
      device: /home/efreire-/data/wordpress

  db-volume:
    driver_opts:
      o: bind
      type: none
      device: /home/efreire-/data/mariadb


# Define networks that containers can be connected to.
# Ex: The "bridge" driver allows containers connected to the same bridge network to communicate with each other.

networks:
    inception:
        driver: bridge
